//
//  RemoteControl.swift
//  DewertOkin
//
//  Created by Nima Rahrakhshan on 28.11.18.
//  Copyright Â© 2018 Team DewertOkin. All rights reserved.
//

import Foundation

class RemoteControlConfig {
    
    public func getKeycode(name: keycode) -> Data {
        switch name {
        case .m1Out: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x01])
        case .m1In: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x02])
        case .m2Out: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x04])
        case .m2In: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x08])
        case .m3Out: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x10])
        case .m3In: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x20])
        case .m4Out: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x40])
        case .m4In: return Data(bytes:[0x04,0x02,0x00,0x00,0x00,0x80])
        case .sync: return Data(bytes:[0x04,0x02,0x00,0x00,0x01,0x00])
        case .socket: return Data(bytes:[0x04,0x02,0x00,0x00,0x02,0x00])
        case .massageStop: return Data(bytes:[0x04,0x02,0x00,0x00,0x04,0x00])
        case .massageHeadPlus: return Data(bytes:[0x04,0x02,0x00,0x00,0x08,0x00])
        case .memory1: return Data(bytes:[0x04,0x02,0x00,0x00,0x10,0x00])
        case .memory2: return Data(bytes:[0x04,0x02,0x00,0x00,0x20,0x00])
        case .memory3: return Data(bytes:[0x04,0x02,0x00,0x00,0x40,0x00])
        case .memory4: return Data(bytes:[0x04,0x02,0x00,0x00,0x80,0x00])
        case .storeMemoryPosition: return Data(bytes:[0x04,0x02,0x00,0x01,0x00,0x00])
        case .ubl: return Data(bytes:[0x04,0x02,0x00,0x02,0x00,0x00])
        case .torch: return Data(bytes:[0x04,0x02,0x00,0x04,0x00,0x00])
        case .massageHead: return Data(bytes:[0x04,0x02,0x00,0x08,0x00,0x00])
        case .massageFeet: return Data(bytes:[0x04,0x02,0x00,0x10,0x00,0x00])
        case .massageAll: return Data(bytes:[0x04,0x02,0x00,0x20,0x00,0x00])
        case .massageFeetPlus: return Data(bytes:[0x04,0x02,0x00,0x40,0x00,0x00])
        case .massageHeadMinus: return Data(bytes:[0x04,0x02,0x00,0x80,0x00,0x00])
        case .massageFeetMinus: return Data(bytes:[0x04,0x02,0x01,0x00,0x00,0x00])
        case .empty: return Data(bytes:[0x04,0x02,0x02,0x00,0x00,0x00])
        case .massageWave: return Data(bytes:[0x04,0x02,0x04,0x00,0x00,0x00])
        case .safetyChild: return Data(bytes:[0x04,0x02,0x08,0x00,0x00,0x00])
        case .allFlat: return Data(bytes:[0x04,0x02,0x10,0x00,0x00,0x00])
        case .massage1: return Data(bytes:[0x04,0x02,0x10,0x00,0x00,0x00])
        case .massage2: return Data(bytes:[0x04,0x02,0x20,0x00,0x00,0x00])
        case .massage3: return Data(bytes:[0x04,0x02,0x40,0x00,0x00,0x00])
        }
    }
}


// The keycodes for the HE150 Remote Control
enum keycode {
    case m1Out
    case m1In
    case m2Out
    case m2In
    case m3Out
    case m3In
    case m4Out
    case m4In
    case sync
    case socket
    case massageStop
    case massageHeadPlus
    case memory1
    case memory2
    case memory3
    case memory4
    case storeMemoryPosition
    case ubl
    case torch
    case massageHead
    case massageFeet
    case massageAll
    case massageFeetPlus
    case massageHeadMinus
    case massageFeetMinus
    case empty
    case massageWave
    case safetyChild
    case allFlat
    case massage1
    case massage2
    case massage3
}
